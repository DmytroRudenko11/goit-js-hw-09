{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAwCA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAhDAQ,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAEC,iBACF,IAAIC,EAAe,EAEnB,MAAMC,EAAQC,OAAOJ,EAAEK,OAAOhB,MAAMiB,OAC9BC,EAAOH,OAAOJ,EAAEK,OAAOE,KAAKD,OAC5BE,EAASJ,OAAOJ,EAAEK,OAAOG,OAAOF,OAEtC,GAAIH,EAAQ,EACV,OAAOM,EAAAxB,GAASyB,OAAOC,QACrB,uDAEG,GAAI,GAAKH,EACd,OAAOC,EAAAxB,GAASyB,OAAOC,QACrB,+CAIJ,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAQI,IAC1BV,EAAeC,EAAQI,EAAOK,EAE9BzB,EAAcyB,EAAI,EAAGV,GAClBW,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MACjBoB,EAAAxB,GAASyB,OAAOI,QACd,uBAAqB1B,QAAiBC,MAAU,IAGnD0B,OAAM,EAAC3B,SAAEA,EAAQC,MAAEA,MAClBoB,EAAAxB,GAASyB,OAAOC,QACd,sBAAoBvB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', dataHandler);\n\nfunction dataHandler(e) {\n  e.preventDefault();\n  let currentDelay = 0;\n\n  const delay = Number(e.target.delay.value);\n  const step = Number(e.target.step.value);\n  const amount = Number(e.target.amount.value);\n\n  if (delay < 0) {\n    return Notiflix.Notify.failure(\n      'Value for first step should be positive or equal 0!'\n    );\n  } else if (0 >= amount) {\n    return Notiflix.Notify.failure(\n      'Amount of promises should be higher then 0!'\n    );\n  }\n\n  for (let i = 0; i < amount; i++) {\n    currentDelay = delay + step * i;\n\n    createPromise(i + 1, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","e","preventDefault","currentDelay","delay1","Number","target","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","success","catch"],"version":3,"file":"03-promises.ebd3eeb6.js.map"}